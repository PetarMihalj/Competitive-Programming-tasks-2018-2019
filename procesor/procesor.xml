<challenge>
  <name>Procesor</name>
  <problem><![CDATA[Ivica je na livadi ugledao niz od $n$ procesora te ide s lijeva na desno i želi pokupiti neke. Svaki procesor ima određenu širinu sabirnice koja je predstavljena brojem $a_i$ ($1 \leq  a_i \leq 3000$).
Ivica nije jednostavan čovjek pa mora vrijediti sljedeće.

1. Ako Ivica do sada nije uzeo niti jedan procesor smije uzeti bilo koji procesor na kojem se trenutno nalazi.

2. Ako je Ivica već sakupio neke procesore, smije pokupiti novi samo ako je njegova širina sabirnice različite parnosti od širine sabirnice onog procesera kojeg je zadnjeg te ako je njegova širina sabirnica strogo veća od svih do sada pokupljenih.

Ivicu zanima samo da ima lijepo kučište, a ne kakav proces ima pa mu nije bitno koliko je dobar najbolji procesor koji je pokupio već koliko ih je sakupio.
Pomozite Ivici i odredite maksimalan moguć broj procesora koje može sakupiti.

### Ulazni podatci

U prvom retku nalaze se broj $n$ ($1 \leq n \leq 3000$).
U sljedećem retku nalazi se $n$ brojeva $a_i$, koji predstavljaju širinu sabirnice procesora s lijeva na desno.

### Izlazni podatci

U prvom retku treba ispisati najveći broj procesora koji Ivica može imati nakon šetnje livadom.]]></problem>
  <tags>dinamičko programiranje, LIS</tags>
  <programming_languages>
    <programming_language>
      <code>Cpp</code>
      <submission_template><![CDATA[]]></submission_template>
    </programming_language>
    <programming_language>
      <code>Java</code>
      <submission_template><![CDATA[class program {
	public static void main(String[] args) {

        }
}]]></submission_template>
    </programming_language>
    <programming_language>
      <code>Python3</code>
      <submission_template><![CDATA[]]></submission_template>
    </programming_language>
    <programming_language>
      <code>Python2</code>
      <submission_template><![CDATA[]]></submission_template>
    </programming_language>
    <programming_language>
      <code>C</code>
      <submission_template><![CDATA[]]></submission_template>
    </programming_language>
  </programming_languages>
  <testcases>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>1</is_public>
      <hint><![CDATA[Ivica može skupiti 1. i 3. procesor. Ivica ih ne može skupiti više od 2 jer svaki sljedeći procesor mora biti drugačije parnosti od onog prethodnog. ]]></hint>
      <input format="file">in1.sample.txt</input>
      <output format="file">out1.sample.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in2.txt</input>
      <output format="file">out2.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in3.txt</input>
      <output format="file">out3.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in4.txt</input>
      <output format="file">out4.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in5.txt</input>
      <output format="file">out5.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in6.txt</input>
      <output format="file">out6.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in7.txt</input>
      <output format="file">out7.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in8.txt</input>
      <output format="file">out8.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in9.txt</input>
      <output format="file">out9.txt</output>
    </testcase>
    <testcase>
      <cpu_time_limit>1000</cpu_time_limit>
      <memory_limit>838860800</memory_limit>
      <is_public>0</is_public>
      <hint><![CDATA[]]></hint>
      <input format="file">in10.txt</input>
      <output format="file">out10.txt</output>
    </testcase>
  </testcases>
</challenge>
